Compiled from "Element.java"
public class org.jdom2.Element extends org.jdom2.Content implements org.jdom2.Parent {
  protected java.lang.String name;
  protected org.jdom2.Namespace namespace;
  transient java.util.List<org.jdom2.Namespace> additionalNamespaces;
  transient org.jdom2.AttributeList attributes;
  transient org.jdom2.ContentList content;
  protected org.jdom2.Element();
  public org.jdom2.Element(java.lang.String, org.jdom2.Namespace);
  public org.jdom2.Element(java.lang.String);
  public org.jdom2.Element(java.lang.String, java.lang.String);
  public org.jdom2.Element(java.lang.String, java.lang.String, java.lang.String);
  public java.lang.String getName();
  public org.jdom2.Element setName(java.lang.String);
  public org.jdom2.Namespace getNamespace();
  public org.jdom2.Element setNamespace(org.jdom2.Namespace);
  public java.lang.String getNamespacePrefix();
  public java.lang.String getNamespaceURI();
  public org.jdom2.Namespace getNamespace(java.lang.String);
  public java.lang.String getQualifiedName();
  public boolean addNamespaceDeclaration(org.jdom2.Namespace);
  public void removeNamespaceDeclaration(org.jdom2.Namespace);
  public java.util.List<org.jdom2.Namespace> getAdditionalNamespaces();
  public java.lang.String getValue();
  public boolean isRootElement();
  public int getContentSize();
  public int indexOf(org.jdom2.Content);
  public java.lang.String getText();
  public java.lang.String getTextTrim();
  public java.lang.String getTextNormalize();
  public java.lang.String getChildText(java.lang.String);
  public java.lang.String getChildTextTrim(java.lang.String);
  public java.lang.String getChildTextNormalize(java.lang.String);
  public java.lang.String getChildText(java.lang.String, org.jdom2.Namespace);
  public java.lang.String getChildTextTrim(java.lang.String, org.jdom2.Namespace);
  public java.lang.String getChildTextNormalize(java.lang.String, org.jdom2.Namespace);
  public org.jdom2.Element setText(java.lang.String);
  public boolean coalesceText(boolean);
  public java.util.List<org.jdom2.Content> getContent();
  public <E extends org.jdom2.Content> java.util.List<E> getContent(org.jdom2.filter.Filter<E>);
  public java.util.List<org.jdom2.Content> removeContent();
  public <F extends org.jdom2.Content> java.util.List<F> removeContent(org.jdom2.filter.Filter<F>);
  public org.jdom2.Element setContent(java.util.Collection<? extends org.jdom2.Content>);
  public org.jdom2.Element setContent(int, org.jdom2.Content);
  public org.jdom2.Parent setContent(int, java.util.Collection<? extends org.jdom2.Content>);
  public org.jdom2.Element addContent(java.lang.String);
  public org.jdom2.Element addContent(org.jdom2.Content);
  public org.jdom2.Element addContent(java.util.Collection<? extends org.jdom2.Content>);
  public org.jdom2.Element addContent(int, org.jdom2.Content);
  public org.jdom2.Element addContent(int, java.util.Collection<? extends org.jdom2.Content>);
  public java.util.List<org.jdom2.Content> cloneContent();
  public org.jdom2.Content getContent(int);
  public boolean removeContent(org.jdom2.Content);
  public org.jdom2.Content removeContent(int);
  public org.jdom2.Element setContent(org.jdom2.Content);
  public boolean isAncestor(org.jdom2.Element);
  public boolean hasAttributes();
  public boolean hasAdditionalNamespaces();
  org.jdom2.AttributeList getAttributeList();
  public java.util.List<org.jdom2.Attribute> getAttributes();
  public org.jdom2.Attribute getAttribute(java.lang.String);
  public org.jdom2.Attribute getAttribute(java.lang.String, org.jdom2.Namespace);
  public java.lang.String getAttributeValue(java.lang.String);
  public java.lang.String getAttributeValue(java.lang.String, java.lang.String);
  public java.lang.String getAttributeValue(java.lang.String, org.jdom2.Namespace);
  public java.lang.String getAttributeValue(java.lang.String, org.jdom2.Namespace, java.lang.String);
  public org.jdom2.Element setAttributes(java.util.Collection<? extends org.jdom2.Attribute>);
  public org.jdom2.Element setAttribute(java.lang.String, java.lang.String);
  public org.jdom2.Element setAttribute(java.lang.String, java.lang.String, org.jdom2.Namespace);
  public org.jdom2.Element setAttribute(org.jdom2.Attribute);
  public boolean removeAttribute(java.lang.String);
  public boolean removeAttribute(java.lang.String, org.jdom2.Namespace);
  public boolean removeAttribute(org.jdom2.Attribute);
  public java.lang.String toString();
  public org.jdom2.Element clone();
  public org.jdom2.util.IteratorIterable<org.jdom2.Content> getDescendants();
  public <F extends org.jdom2.Content> org.jdom2.util.IteratorIterable<F> getDescendants(org.jdom2.filter.Filter<F>);
  public java.util.List<org.jdom2.Element> getChildren();
  public java.util.List<org.jdom2.Element> getChildren(java.lang.String);
  public java.util.List<org.jdom2.Element> getChildren(java.lang.String, org.jdom2.Namespace);
  public org.jdom2.Element getChild(java.lang.String, org.jdom2.Namespace);
  public org.jdom2.Element getChild(java.lang.String);
  public boolean removeChild(java.lang.String);
  public boolean removeChild(java.lang.String, org.jdom2.Namespace);
  public boolean removeChildren(java.lang.String);
  public boolean removeChildren(java.lang.String, org.jdom2.Namespace);
  public java.util.List<org.jdom2.Namespace> getNamespacesInScope();
  public java.util.List<org.jdom2.Namespace> getNamespacesInherited();
  public java.util.List<org.jdom2.Namespace> getNamespacesIntroduced();
  public org.jdom2.Element detach();
  public void canContainContent(org.jdom2.Content, int, boolean) throws org.jdom2.IllegalAddException;
  public void sortContent(java.util.Comparator<? super org.jdom2.Content>);
  public void sortChildren(java.util.Comparator<? super org.jdom2.Element>);
  public void sortAttributes(java.util.Comparator<? super org.jdom2.Attribute>);
  public <E extends org.jdom2.Content> void sortContent(org.jdom2.filter.Filter<E>, java.util.Comparator<? super E>);
  public java.net.URI getXMLBaseURI() throws java.net.URISyntaxException;
  public org.jdom2.Content clone();
  public org.jdom2.Content detach();
  public org.jdom2.CloneBase clone();
  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
  public org.jdom2.Parent addContent(int, java.util.Collection);
  public org.jdom2.Parent addContent(int, org.jdom2.Content);
  public org.jdom2.Parent addContent(java.util.Collection);
  public org.jdom2.Parent addContent(org.jdom2.Content);
}
