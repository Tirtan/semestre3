package tp3;

import javax.vecmath.Vector3d;

import simbad.sim.Agent;
import simbad.sim.CherryAgent;
import simbad.sim.RangeSensorBelt;
import simbad.sim.RobotFactory;
import simbad.sim.SimpleAgent;
import simbad.sim.Simulator;

public class MyRobot extends Agent
{
	private RangeSensorBelt sonars;
	
	private static int nbInst = 0;
	private int numRbt;
	
	/**
	 * Attribut de classe définissant la vitesse par défaut de ce type de robot soit 0.5
	 * */
	public static double DEFAULT_SPEED = 0.5;
	
	/**
	 * Vitesse actuelle du robot
	 * */
	private double vitesse;
	
	/**
	 * Simulator sur lequel peut agir le robot
	 * */
	private Simulator simulator;
	
	public MyRobot(Vector3d pos, String name, Simulator simulator)
	{
		super(pos, name);
		
		this.simulator = simulator;
		
		this.setCanBeTraversed(false);
		
		this.sonars = RobotFactory.addSonarBeltSensor(this,8);
		this.numRbt = ++nbInst;
		
		this.vitesse = MyRobot.DEFAULT_SPEED; // 0.5 m/s par default
	}

	@Override
	protected void initBehavior()
	{
		// TODO Auto-generated method stub
		//super.initBehavior();
	}

	/*@Override
	protected void performBehavior()
	{
		// TODO Auto-generated method stub
		//super.performBehavior();
		
		// avance à 0.5 m/s
		setTranslationalVelocity(0.9);
				
		// changer l'angle fréquemment
		if ((getCounter() % 100)==0) setRotationalVelocity(Math.PI/2 * (0.5 - Math.random()));
		
		if (sonars.oneHasHit())
		{
			double left  = sonars.getFrontLeftQuadrantMeasurement ();
			double right = sonars.getFrontRightQuadrantMeasurement();
			double front = sonars.getFrontQuadrantMeasurement	  ();
			
				if ((front > 0.5)||(left > 0.5)||(right > 0.5))
				{
					if (left < right) setRotationalVelocity(-1);
					else 			  setRotationalVelocity( 1);
				}
		}
		if (this.collisionDetected())
		{
			System.out.println("collision du robot " +this.numRbt);
			setTranslationalVelocity(-Math.PI / 4);
			setRotationalVelocity(Math.PI / 2) ;
		}
		
		if (anOtherAgentIsVeryNear())
		{
			SimpleAgent agent = getVeryNearAgent();
			if (agent instanceof CherryAgent)
			{
				agent.detach();
				System.out.println("cerise cueillie !");
			}
		}
		
		
	}*/
	
	@Override
	protected void performBehavior()
	{
		super.performBehavior();
		
		// avance à 0.5 m/s de base en continu, vitesse peut être changée via modificateurs
		setTranslationalVelocity(this.vitesse);
				
		
		/*if (this.collisionDetected())
		{
			System.out.println("collision du robot " +this.numRbt);
			//setTranslationalVelocity(-Math.PI / 4);
			//setRotationalVelocity(Math.PI / 2) ;
		}*/
		
		if (anOtherAgentIsVeryNear())
		{
			SimpleAgent agent = getVeryNearAgent();
			
			if (agent instanceof CherryAgent)
			{
				agent.detach();
				System.out.println("cerise cueillie !");
			}
			
			if(agent instanceof RobotEnnemi)
			{
				System.out.println("ennemi touché");
				
			}
		}
		
		
	}
	
	/**
	 * Incrémente la vitesse de +0.5 m/s (tp4)
	 * */
	public void incSpeed(){
		this.vitesse += 0.5;
	}
	
	/**
	 * Diminue la vitesse de -0.5 m/s (tp4)
	 * */
	public void decSpeed(){
		if(this.vitesse - DEFAULT_SPEED >= DEFAULT_SPEED) this.vitesse -= 0.5;
	}
	
	/**
	 * Remet la vitesse par défaut de 0.5 m/s (tp4)
	 * */
	public void resetSpeed(){
		this.vitesse = DEFAULT_SPEED;
	}

}
